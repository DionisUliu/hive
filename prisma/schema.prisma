// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String   @id @default(cuid())
  firstName        String   @map("first_name")
  lastName         String   @map("last_name")
  email            String   @unique
  password         String
  verificationCode String?  @map("verification_code")
  gender           String
  createdAt        DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt        DateTime @updatedAt @map("updated_at") @db.Timestamp(6)
}

model Building {
  id        String     @id @default(cuid())
  name      String
  history   Register[]
  createdAt DateTime   @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime   @updatedAt @map("updated_at") @db.Timestamp(6)
}

model Room {
  id          String     @id @default(cuid())
  name        String
  type        RoomType
  capacity    Int
  isAvailable Boolean
  preview     String
  contracts   Contract[]
  history     Register[]
  createdAt   DateTime   @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt   DateTime   @updatedAt @map("updated_at") @db.Timestamp(6)
}

model Resident {
  id          String     @id @default(cuid())
  firstName   String     @map("first_name")
  lastName    String     @map("last_name")
  email       String     @unique
  gender      String
  phoneNumber String     @map("phone_number")
  contract    Contract?
  history     Register[]
  createdAt   DateTime   @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt   DateTime   @updatedAt @map("updated_at") @db.Timestamp(6)
  deletedAt   DateTime?  @map("deleted_at") @db.Timestamp(6)
}

model Contract {
  id         String    @id @default(cuid())
  name       String
  amount     Float
  startDate  String    @map("start_date")
  endDate    String    @map("end_date")
  isPaid     Boolean   @map("is_paid")
  residentId String    @unique @map("resident_id")
  resident   Resident  @relation(fields: [residentId], references: [id])
  createdAt  DateTime  @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt  DateTime  @updatedAt @map("updated_at") @db.Timestamp(6)
  deletedAt  DateTime? @map("deleted_at") @db.Timestamp(6)
  roomId     String    @map("room_id")
  Room       Room      @relation(fields: [roomId], references: [id])

  @@index([roomId])
}

model Register {
  id         String   @id @default(cuid())
  active     Boolean  @default(true)
  buildingId String   @map("building_id")
  residentId String
  roomId     String
  createdAt  DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt  DateTime @updatedAt @map("updated_at") @db.Timestamp(6)
  Building   Building @relation(fields: [buildingId], references: [id])
  Room       Room     @relation(fields: [roomId], references: [id])
  Resident   Resident @relation(fields: [residentId], references: [id])

  @@index([roomId])
  @@index([residentId])
  @@index([buildingId])
}

enum Role {
  ADMIN
  RESIDENT
}

enum RoomType {
  SINGLE_ROOM
  SINGLE_ROOM_FOR_TWO
  ONE_BEDROOM_APARTMENT
  TWO_BEDROOM_APARTMENT
  BIG_STUDIO_APARTMENT
}
